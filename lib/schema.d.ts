/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Buggy/unauthorized": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Buggy/badrequest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Buggy/notfound": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Buggy/internalerror": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Buggy/validationerror": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CreateConcertSeasonDto"];
                    "text/json": components["schemas"]["CreateConcertSeasonDto"];
                    "application/*+json": components["schemas"]["CreateConcertSeasonDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Composers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["StandAloneComposerDto"][];
                        "application/json": components["schemas"]["StandAloneComposerDto"][];
                        "text/json": components["schemas"]["StandAloneComposerDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CreateComposerDto"];
                    "text/json": components["schemas"]["CreateComposerDto"];
                    "application/*+json": components["schemas"]["CreateComposerDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Composer"];
                        "application/json": components["schemas"]["Composer"];
                        "text/json": components["schemas"]["Composer"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Composers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["StandAloneComposerDto"];
                        "application/json": components["schemas"]["StandAloneComposerDto"];
                        "text/json": components["schemas"]["StandAloneComposerDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UpdateComposerDto"];
                    "text/json": components["schemas"]["UpdateComposerDto"];
                    "application/*+json": components["schemas"]["UpdateComposerDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Composers/{id}/concerts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertDto"][];
                        "application/json": components["schemas"]["ConcertDto"][];
                        "text/json": components["schemas"]["ConcertDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Concerts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertDto"][];
                        "application/json": components["schemas"]["ConcertDto"][];
                        "text/json": components["schemas"]["ConcertDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CreateConcertDto"];
                    "text/json": components["schemas"]["CreateConcertDto"];
                    "application/*+json": components["schemas"]["CreateConcertDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Concert"];
                        "application/json": components["schemas"]["Concert"];
                        "text/json": components["schemas"]["Concert"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Concerts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertDto"];
                        "application/json": components["schemas"]["ConcertDto"];
                        "text/json": components["schemas"]["ConcertDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UpdateConcertDto"];
                    "text/json": components["schemas"]["UpdateConcertDto"];
                    "application/*+json": components["schemas"]["UpdateConcertDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ConcertSeasons": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertSeasonDto"][];
                        "application/json": components["schemas"]["ConcertSeasonDto"][];
                        "text/json": components["schemas"]["ConcertSeasonDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CreateConcertSeasonDto"];
                    "text/json": components["schemas"]["CreateConcertSeasonDto"];
                    "application/*+json": components["schemas"]["CreateConcertSeasonDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertSeason"];
                        "application/json": components["schemas"]["ConcertSeason"];
                        "text/json": components["schemas"]["ConcertSeason"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ConcertSeasons/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertSeasonDto"];
                        "application/json": components["schemas"]["ConcertSeasonDto"];
                        "text/json": components["schemas"]["ConcertSeasonDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UpdateConcertSeasonDto"];
                    "text/json": components["schemas"]["UpdateConcertSeasonDto"];
                    "application/*+json": components["schemas"]["UpdateConcertSeasonDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ConcertSeasons/{id}/concerts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertDto"][];
                        "application/json": components["schemas"]["ConcertDto"][];
                        "text/json": components["schemas"]["ConcertDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Performers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PerformerDto"][];
                        "application/json": components["schemas"]["PerformerDto"][];
                        "text/json": components["schemas"]["PerformerDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CreatePerformerDto"];
                    "text/json": components["schemas"]["CreatePerformerDto"];
                    "application/*+json": components["schemas"]["CreatePerformerDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Performer"];
                        "application/json": components["schemas"]["Performer"];
                        "text/json": components["schemas"]["Performer"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Performers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PerformerDto"];
                        "application/json": components["schemas"]["PerformerDto"];
                        "text/json": components["schemas"]["PerformerDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UpdatePerformerDto"];
                    "text/json": components["schemas"]["UpdatePerformerDto"];
                    "application/*+json": components["schemas"]["UpdatePerformerDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Performers/{id}/concerts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertDto"][];
                        "application/json": components["schemas"]["ConcertDto"][];
                        "text/json": components["schemas"]["ConcertDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Pieces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PieceDto"][];
                        "application/json": components["schemas"]["PieceDto"][];
                        "text/json": components["schemas"]["PieceDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CreatePieceDto"];
                    "text/json": components["schemas"]["CreatePieceDto"];
                    "application/*+json": components["schemas"]["CreatePieceDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Piece"];
                        "application/json": components["schemas"]["Piece"];
                        "text/json": components["schemas"]["Piece"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Pieces/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PieceDto"];
                        "application/json": components["schemas"]["PieceDto"];
                        "text/json": components["schemas"]["PieceDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UpdatePieceDto"];
                    "text/json": components["schemas"]["UpdatePieceDto"];
                    "application/*+json": components["schemas"]["UpdatePieceDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Pieces/{id}/concerts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    PageIndex?: number;
                    PageSize?: number;
                    Search?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConcertDto"][];
                        "application/json": components["schemas"]["ConcertDto"][];
                        "text/json": components["schemas"]["ConcertDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Composer: {
            name: string;
            pieces?: components["schemas"]["Piece"][];
            /** Format: int32 */
            id?: number;
        };
        ComposerDto: {
            /** Format: int32 */
            id?: number;
            name: string;
        };
        ComposerPieceDto: {
            /** Format: int32 */
            id?: number;
            title: string;
        };
        Concert: {
            description?: string | null;
            /** Format: date-time */
            date: string;
            /** Format: int32 */
            concertSeasonId: number;
            concertSeason?: components["schemas"]["ConcertSeason"];
            piecesInConcert?: unknown;
            /** Format: int32 */
            id?: number;
        };
        ConcertDto: {
            /** Format: int32 */
            id?: number;
            description?: string | null;
            /** Format: date-time */
            date: string;
            /** Format: int32 */
            concertSeasonId?: number;
            piecesInConcert: components["schemas"]["PieceInConcertDto"][];
        };
        ConcertSeason: {
            title: string;
            concerts?: components["schemas"]["Concert"][];
            /** Format: int32 */
            id?: number;
        };
        ConcertSeasonDto: {
            /** Format: int32 */
            id?: number;
            title: string;
        };
        CreateComposerDto: {
            name: string;
        };
        CreateConcertDto: {
            description?: string | null;
            /** Format: date-time */
            date: string;
            /** Format: int32 */
            concertSeasonId: number;
        };
        CreateConcertSeasonDto: {
            title: string;
        };
        CreatePerformerDto: {
            name: string;
        };
        CreatePieceDto: {
            title: string;
            /** Format: int32 */
            composerId: number;
        };
        Instrument: {
            name: string;
            performersInGroups?: unknown[];
            /** Format: int32 */
            id?: number;
        };
        Performer: {
            name: string;
            performerInGroups?: unknown[];
            /** Format: int32 */
            id?: number;
        };
        PerformerDto: {
            /** Format: int32 */
            id?: number;
            name: string;
        };
        PerformerInConcertDto: {
            /** Format: int32 */
            id?: number;
            name: string;
            instrument: string;
        };
        PerformerInGroup: {
            /** Format: int32 */
            performerId: number;
            performer?: components["schemas"]["Performer"];
            /** Format: int32 */
            instrumentId: number;
            instrument?: components["schemas"]["Instrument"];
            /** Format: int32 */
            pieceInConcertId: number;
            pieceInConcert?: components["schemas"]["PieceInConcert"];
            /** Format: int32 */
            id?: number;
        };
        Piece: {
            title: string;
            /** Format: int32 */
            composerId: number;
            composer?: components["schemas"]["Composer"];
            pieceInConcerts?: components["schemas"]["PieceInConcert"][];
            /** Format: int32 */
            id?: number;
        };
        PieceDto: {
            /** Format: int32 */
            id?: number;
            title: string;
            composer: components["schemas"]["ComposerDto"];
        };
        PieceInConcert: {
            /** Format: int32 */
            pieceId: number;
            piece?: components["schemas"]["Piece"];
            /** Format: int32 */
            concertId: number;
            concert?: components["schemas"]["Concert"];
            groupName: string;
            performersInGroup?: components["schemas"]["PerformerInGroup"][];
            /** Format: int32 */
            id?: number;
        };
        PieceInConcertDto: {
            piece: components["schemas"]["PieceDto"];
            groupName: string;
            performers: components["schemas"]["PerformerInConcertDto"][];
        };
        StandAloneComposerDto: {
            /** Format: int32 */
            id?: number;
            name: string;
            pieces: components["schemas"]["ComposerPieceDto"][];
        };
        UpdateComposerDto: {
            /** Format: int32 */
            id: number;
            name: string;
        };
        UpdateConcertDto: {
            /** Format: int32 */
            id: number;
            description?: string | null;
            /** Format: date-time */
            date: string;
            /** Format: int32 */
            concertSeasonId: number;
        };
        UpdateConcertSeasonDto: {
            /** Format: int32 */
            id: number;
            title: string;
        };
        UpdatePerformerDto: {
            /** Format: int32 */
            id: number;
            name: string;
        };
        UpdatePieceDto: {
            /** Format: int32 */
            id: number;
            title: string;
            /** Format: int32 */
            composerId: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
